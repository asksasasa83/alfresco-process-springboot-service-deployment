apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "alfresco-java-service.fullname" . }}
  labels:
    {{- include "alfresco-java-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "alfresco-java-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "alfresco-java-service.selectorLabels" . | nindent 8 }}
    spec:
{{- if include "common.registry-pull-secrets" . }}
      imagePullSecrets:
      {{- include "common.registry-pull-secrets" . | indent 6 }}
{{- end }}
      serviceAccountName: {{ include "alfresco-java-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if or .Values.postgres.enabled .Values.extraInitContainers }}
      initContainers:
      {{- if .Values.postgres.enabled }}
        - name: wait-for-postgresql
          image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              until printf "." && nc -z -w 2 {{ .Release.Name }}-{{ .Values.postgres.name }} {{ .Values.postgres.port }}; do
                  sleep 2;
              done;

              echo 'PostgreSQL OK âœ“'
      {{- end }}
      {{- if .Values.extraInitContainers }}
{{ tpl .Values.extraInitContainers . | indent 8 }}
      {{- end }}
    {{- end }}
      containers:
      {{- if .Values.extraContainers }}
        {{ tpl .Values.extraContainers . | nindent 8 }}
      {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: JAVA_OPTS
              value: "-Xmx{{ .Values.javaOpts.xmx }} -Xms{{ .Values.javaOpts.xms }} {{ .Values.javaOpts.other}}"
            - name: SPRING_APPLICATION_NAME
            {{- if .Values.service.name }}
              value: "{{ .Values.service.name }}"
            {{- else }}
              value: {{ template "alfresco-java-service.fullname" . }}
            {{- end }}
            {{- if .Values.rabbitmq.enabled }}
            - name: SPRING_RABBITMQ_HOST
            {{- if .Values.global.rabbitmq.host.value }}
              value: {{ .Values.global.rabbitmq.host.value | quote }}
            {{- else }}
              value: "{{ .Release.Name }}-rabbitmq"
            {{- end }}
            - name: SPRING_RABBITMQ_USERNAME
              value: {{ .Values.global.rabbitmq.username.value }}
            - name: SPRING_RABBITMQ_PASSWORD
              value: {{ .Values.global.rabbitmq.password.value }}
    {{- end }}
            {{- if include "common.keycloak-enabled" $ }}
            - name: ACT_KEYCLOAK_URL
              value: {{ include "common.keycloak-url" $ | quote }}
            {{- end }}
            {{- if include "common.keycloak-realm" . }}
            - name: ACT_KEYCLOAK_REALM
              value: {{ include "common.keycloak-realm" . | quote }}
            {{- end }}
            {{- if include "common.keycloak-resource" .  }}
            - name: ACT_KEYCLOAK_RESOURCE
              value: {{ include "common.keycloak-resource" . | quote }}
            {{- end }}
{{- if .Values.postgres.enabled }}
            - name: SPRING_DATASOURCE_URL
              {{- if .Values.postgres.uri }}
              value: {{ .Values.postgres.uri | quote }}
              {{- else }}
              value: "jdbc:postgresql://{{ .Release.Name }}-{{ .Values.postgres.name }}:{{ .Values.postgres.port }}/postgres"
              {{- end }}
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: {{ default "org.postgresql.Driver" .Values.postgres.driver | quote }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ default "postgres" .Values.postgres.username | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              {{- if .Values.postgres.password }}
              value: {{ .Values.postgres.password | quote }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.postgres.name }}
                  key: {{ default "postgresql-password" .Values.postgres.secretKey }}
              {{- end }}
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: {{ default "org.hibernate.dialect.PostgreSQLDialect" .Values.postgres.platform | quote }}
            - name: SPRING_JPA_GENERATE_DDL
              value: {{ default  "true"  .Values.postgres.generateDdl | quote }}
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: {{ default "update"  .Values.postgres.ddlAuto | quote}}
    {{- else }}
              {{- if .Values.db.uri }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.db.uri | quote }}
              {{- end }}
              {{- if .Values.db.driver }}
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: {{ .Values.db.driver | quote }}
              {{- end }}
              {{- if .Values.db.username }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.db.username | quote }}
              {{- end }}
              {{- if .Values.db.password}}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.db.password | quote}}
              {{- end }}
              {{- if .Values.db.platform}}
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: {{ .Values.db.platform | quote}}
              {{- end }}
              {{- if .Values.db.generateDdl}}
            - name: SPRING_JPA_GENERATE_DDL
              value: {{ .Values.db.generateDdl | quote }}
              {{- end }}
              {{- if .Values.db.ddlAuto}}
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: {{ default "update"  .Values.db.ddlAuto | quote }}
              {{- end }}
{{- end }}
            {{ include "common.extra-env" . | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: {{ tpl .Values.probePath . }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ tpl .Values.probePath . }}
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
          {{ tpl . $ | nindent 12 }}
          {{- end }}
      {{- with .Values.extraVolumes }}
      volumes:
      {{ tpl . $ | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
  {{- end }}
