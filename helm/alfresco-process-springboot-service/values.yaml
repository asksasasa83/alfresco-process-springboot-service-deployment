# Default values for Maven projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
global:
  rabbitmq:
    host:
      value: ""
    username:
      value: guest
    password:
      value: guest
  keycloak:
    url: ""
    name: keycloak
    service:
      type: http
      port: 80
    realm: ""
    resource: ""
  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  gateway:
    host: ""

db:
  uri:
  username:
  password:
  driver:
  platform:
  generateDdl:
  ddlAuto:

postgres:
  enabled: false
  name: postgres
  port: 5432
  username: postgres
  password:

rabbitmq:
  enabled: true

init:
  image:
    repository: alpine
    tag: 3.8
    pullPolicy: IfNotPresent

## Allows the specification of additional environment variables
extraEnv: |
  # - name: ACT_KEYCLOAK_URL
  #   valueFrom:
  #     configMapKeyRef:
  #       name: {{ .Release.Name }}-keycloak-http
  #       key: expose-keycloak-service-key

## Additional init containers, e. g. to wait for a db or SSO
extraInitContainers: |

javaOpts:
  xmx: 2048m
  xms: 512m
  other: -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90

# only set this variable if a private registry secret is needed to pull the image
#registryPullSecrets: private-registry-secret

image:
  repository: activiti/example-runtime-bundle
  pullPolicy: Always

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080

resources:
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 2000m
    memory: 2048Mi
probePath: /actuator/health
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 4
  successThreshold: 1
  failureThreshold: 4
readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
terminationGracePeriodSeconds: 20

ingress:
  # ingress.enabled -- set to true to enable ingress record generation
  enabled: false

  path: /rb-my-app

  # ingress.hostName -- set this to override global.gateway.host name
  hostName:

  # ingress.tls -- set this to true in order to enable TLS on the ingress record
  tls:

  # ingress.tlsSecret -- If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret:

  # ingress.annotations -- Ingress annotations done as key:value pairs
  annotations: {}

# add additional volumes
extraVolumes: |
# add additional volume mounts
extraVolumeMounts: |
# add additional containers
extraContainers: |

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
